# Root workspace configuration
[tool.uv.workspace]
members = [
    "src/email_api",
    "src/gmail_impl",
]

[project]
name = "ospsd-ta-task"
version = "0.1.0"
description = "OSPSD TA Task - Email client workspace"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

[tool.uv.sources]
# Workspace component sources
email-api = { workspace = true }
gmail-impl = { workspace = true }

[project.optional-dependencies]
# Shared development tools used across all workspace components
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.8.0",
    "ruff>=0.1.0",
    "coverage[toml]>=7.0.0",
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

# Component feature groups
email = [
    "email-api>=0.1.0",
]
gmail = [
    "gmail-impl>=0.1.0",
]

# Shared tool configuration for all workspace members
[tool.ruff]
target-version = "py312"
line-length = 88
fix = true
src = ["src"]

[tool.ruff.lint]
# Enable all rules by default, then disable specific ones
select = ["ALL"]
ignore = [
    "D203",    # one-blank-line-before-class conflicts with D211
    "D213",    # multi-line-docstring-summary-second-line conflicts with D212
    "COM812",  # trailing-comma-missing conflicts with formatter
    "ISC001",  # single-line-implicit-string-concatenation conflicts with formatter
    "T201",    # print statements allowed in examples and demos
]

# Per-directory rule customization
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D",       # docstrings not required in tests
    "ANN",     # type annotations not required in tests
    "ARG",     # unused arguments common in test fixtures  
    "FBT",     # boolean positional args ok in tests
    "S",       # security checks less relevant in tests
    "PLR",     # complexity checks not needed in tests
    "SLF001",  # private member access (needed for testing)
]
"src/*/tests/*" = [
    "D",       # docstrings not required in tests
    "ANN",     # type annotations not required in tests
    "ARG",     # unused arguments common in test fixtures  
    "FBT",     # boolean positional args ok in tests
    "S",       # security checks less relevant in tests
    "PLR",     # complexity checks not needed in tests
    "SLF001",  # private member access (needed for testing)
]
"*/examples/*" = [
    "D",       # docstrings not required in examples
    "ANN",     # type annotations not required in examples
    "ARG",     # unused arguments common in examples
    "FBT",     # boolean positional args ok in examples
    "S",       # security checks less relevant in examples
    "PLR",     # complexity checks not needed in examples
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
# Enable ALL strictness options
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
# Additional strict options
disallow_any_expr = false  # Too restrictive for practical use
disallow_any_decorated = false  # Conflicts with common decorators
disallow_any_explicit = false  # Sometimes Any is the correct type
strict_optional = true
strict_equality = true
strict_concatenate = true
show_error_codes = true
show_column_numbers = true
explicit_package_bases = true
namespace_packages = true
# Set mypy path to resolve workspace components correctly
mypy_path = "src/email_api/src:src/gmail_impl/src"

# Ignore missing stubs for external libraries that don't provide them
[[tool.mypy.overrides]]
module = [
    "googleapiclient.*",
    "google_auth_oauthlib.*",
]
ignore_missing_imports = true

# Workspace-level pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--import-mode=importlib",
]
testpaths = ["src/*/tests", "tests"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests", 
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"